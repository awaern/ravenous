{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","rest","Object","esm_extends","this","props","business","console","log","name","react_default","a","createElement","className","src","imageSrc","alt","href","url","target","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","list","isLoading","businesses","map","index","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","_this2","keys","sortByOption","sortByOptionValue","getSortByClass","onClick","handleSortByChange","setState","searchYelp","event","value","preventDefault","action","onSubmit","renderSortByOptions","placeholder","onChange","type","Yelp","search","fetch","concat","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c28c090b.chunk.js","sourcesContent":["import React from 'react';\nimport './Business.scss';\n\nclass Business extends React.Component {\n\n\n  render () {\n    const { ...rest } = this.props.business;\n    console.log(rest.name);\n\n    return (\n\n      <div className=\"Business\">\n        <div className=\"image-container\">\n          <img\n            src={this.props.business.imageSrc}\n            alt={this.props.business.name} />\n        </div>\n        <div className=\"Business-container\">\n          <h2><a href={this.props.business.url} target=\"blank\">{this.props.business.name}</a></h2>\n          <div className=\"Business-information\">\n            <div className=\"Business-address\">\n              <p>{this.props.business.address}</p>\n              <p>{this.props.business.city}</p>\n              <p>{this.props.business.state} {this.props.business.zipCode}</p>\n            </div>\n            <div className=\"Business-reviews\">\n              <h3>{this.props.business.category}</h3>\n              <h3 className=\"rating\">{this.props.business.rating}</h3>\n              <p>{this.props.business.reviewCount}</p>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default Business;\n","import React from 'react';\nimport './BusinessList.scss';\nimport Business from './../Business/Business';\n\nclass BusinessList extends React.Component {\n  render() {\n\n    let list;\n\n    if (this.props.isLoading) {\n      list = <p>Loading...</p>\n    } else if (this.props.businesses) {\n      list = this.props.businesses.map((business, index) => {\n        return <Business key={business.id} business={business}/>\n      });\n    } else {\n      list = <p>Ingen tr√§ff</p>\n    }\n\n    return (\n      <div className=\"BusinessList\">\n        {list}\n      </div>\n    );\n\n  }\n}\n\nexport default BusinessList;\n","import React from 'react'\nimport './SearchBar.scss';\n\nconst sortByOptions = {\n  'Best Match': 'best_match',\n  'Highest Rated': 'rating',\n  'Most Reviewed': 'review_count'\n}\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: '',\n      location: '',\n      sortBy: 'best_match'\n    };\n\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n  renderSortByOptions() {\n    return Object.keys(sortByOptions).map(sortByOption => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return <li\n        key={sortByOptionValue}\n        className={this.getSortByClass(sortByOptionValue)}\n        onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\n        {sortByOption}\n      </li>;\n    });\n\n  }\n  getSortByClass(sortByOption) {\n    if(this.state.sortBy === sortByOption) {\n      return 'active';\n    } else {\n      return '';\n    }\n  }\n  handleSortByChange(sortByOption) {\n    this.setState({sortBy: sortByOption});\n\n    if(this.state.term || this.state.location) {\n      this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n    }\n\n  }\n  handleTermChange(event) {\n    this.setState({term: event.target.value});\n  }\n  handleLocationChange(event) {\n    this.setState({location: event.target.value});\n  }\n  handleSearch(event) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form action=\"#\" className=\"SearchBar\" onSubmit={this.handleSearch}>\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions()}\n          </ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          <input\n            placeholder=\"Search Businesses\"\n            onChange={this.handleTermChange} />\n          <input\n            placeholder=\"Where?\"\n            onChange={this.handleLocationChange} />\n        </div>\n        <div className=\"SearchBar-submit\">\n          <button type=\"submit\">Let's Go</button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SearchBar;\n","const apiKey = 'l0GLaLwWHLQ6HLRa58SgSRKSdkuBnmMXupQuObydcCdwXAtuzGcuRFHA700tOafxH5-mmSmqh_LgfPPsUTXPNdS8FfQGsgrvrG5gsMKrSh14HhauDbOFhx-Kf0KbXHYx';\n\nconst Yelp = {\n  search(term, location, sortBy) {\n      return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n                headers: {\n                  Authorization: `Bearer ${apiKey}`\n                }\n              }).then(response => {\n                return response.json();\n              }).then(jsonResponse => {\n                if (jsonResponse.businesses) {\n                  // console.log(jsonResponse.businesses);\n                  return jsonResponse.businesses.map(business => {\n                    return {\n                      id: business.id,\n                      imageSrc: business.image_url,\n                      name: business.name,\n                      url: business.url,\n                      address: business.location.address1,\n                      city: business.location.city,\n                      state: business.location.state,\n                      zipCode: business.location.zip_code,\n                      category: business.categories[0].title,\n                      rating: business.rating,\n                      reviewCount: business.review_count\n                    }\n                  })\n                }\n              });\n  }\n};\n\nexport default Yelp;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport BusinessList from './components/BusinessList/BusinessList';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport Yelp from './util/Yelp';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: [],\n      isLoading: false\n    };\n\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n  searchYelp(term, location, sortBy) {\n    this.setState({ isLoading: true }, () => {\n      Yelp.search(term, location, sortBy).then(businesses => {\n        this.setState({\n          businesses: businesses,\n          isLoading: false\n        });\n      });\n    });\n\n\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n          <SearchBar searchYelp={this.searchYelp}/>\n          <BusinessList isLoading={this.state.isLoading} businesses={this.state.businesses} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}